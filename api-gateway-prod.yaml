server:
  port: 8080
spring:
  application:
    name: api-gateway
  #  config:
  #    import: configserver:http://${CONFIG_URL:localhost}:9000

  # Zipkin
  zipkin:
    base-url: ${ZIPKIN_URL:http://localhost:9411}
  cloud:
    gateway:
      routes:
        # Custom for order service
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: order-service
                fallbackuri: forward:/orderServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        # Custom for payment service
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: papyment-service
                fallbackuri: forward:/paymentServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        # Custom for product service
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: product-service
                fallbackuri: forward:/productServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1

# Custom Okta Security
okta:
  oauth2:
    issuer: https://dev-23099275.okta.com/oauth2/default
    audience: api://default
    client-id: 0oab2e71rnZHgiMP85d7
    client-secret: Dk_QOlRLry75M56v_umogOtUkJE2FslNcHt3J32M4_3Nh9g1rrM_jINj6gPrFB5r
    scopes: openid, profile, email, offline_access

# Custom Eureka Discovery Service
eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: on
    fetch-registry: on
    service-url:
      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8000/eureka}